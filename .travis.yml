language: cpp
sudo: false

cache:
  ccache: true
  directories: ${TRAVIS_BUILD_DIR}/deps

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1

git:
  depth: 3

branches:
  except:
     - /^(?i:experimental)-.*$/

matrix:
  include:
    ################################################################################################
    # Linux Clang Builds
    ################################################################################################
    - os: linux
      compiler: clang
      addons: &clang35
        apt:
          sources: ['llvm-toolchain-precise-3.5', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.5', 'g++-4.9']
      env: COMPILER='ccache clang++-3.5' SANITIZE='-fsanitize=address,undefined,integer'

    - os: linux
      compiler: clang
      addons: &clang36
        apt:
          sources: ['llvm-toolchain-precise-3.6', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.6']
      env: COMPILER='ccache clang++-3.6' SANITIZE='-fsanitize=address,undefined,integer'

    - os: linux
      compiler: clang
      addons: &clang37
        apt:
          sources: ['llvm-toolchain-precise-3.7', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.7']
      env: COMPILER='ccache clang++-3.7'

    - os: linux
      compiler: clang
      addons: &clang38
        apt:
          sources: ['llvm-toolchain-precise', 'ubuntu-toolchain-r-test']
          packages: ['clang-3.8']
      env: COMPILER='ccache clang++-3.8' COVERAGE='--coverage -O0'

    ################################################################################################
    # Linux GCC Builds
    ################################################################################################
    - os: linux
      compiler: gcc
      addons: &gcc49
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-4.9']
      env: COMPILER='ccache g++-4.9' SANITIZE='-fsanitize=address,undefined'

    - os: linux
      compiler: gcc
      addons: &gcc5
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5']
      env: COMPILER='ccache g++-5' SANITIZE='-fsanitize=address,undefined'

    ################################################################################################
    # OSX Clang Builds
    ################################################################################################
    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: COMPILER='ccache clang++'

    - os: osx
      osx_image: xcode7
      compiler: clang
      env: COMPILER='ccache clang++' SANITIZE='-fsanitize=address'

    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: COMPILER='ccache clang++' SANITIZE='-fsanitize=address'
      
install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install ccache
    fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - . ./CI/get-deps.sh
  - echo $INCLUDE

script:
  - make -j 2 && ./bktga_test
  
after_success:
  - ls -al
  - gcov tga.hpp tga.t.cpp
  - bash <(curl -s https://codecov.io/bash)
